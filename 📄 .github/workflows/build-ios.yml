name: Build RPTChat iOS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest

    steps:
    # 1. Получаем исходный код из репозитория
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Устанавливаем Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    # 3. Безопасно подставляем ключи API из GitHub Secrets в код
    - name: Inject API Keys
      run: |
        sed -i '' "s/this.apiId = 'YOUR_API_ID';/this.apiId = '${{ secrets.TELEGRAM_API_ID }}';/" src/api/TelegramAPI.js
        sed -i '' "s/this.apiHash = 'YOUR_API_HASH';/this.apiHash = '${{ secrets.TELEGRAM_API_HASH }}';/" src/api/TelegramAPI.js
      # Эта команда заменяет строки-плейсхолдеры в файле TelegramAPI.js
      # на реальные значения из секретов.

    # 4. Устанавливаем зависимости проекта
    - name: Install dependencies
      run: |
        npm install
        cd ios && pod install && cd ..
      # Выполняем установку npm-пакетов и подов для iOS

    # 5. Устанавливаем сертификат и прови저닝 профиль для подписи
    - name: Import Code-Signing Certificates
      uses: apple-actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ secrets.P12_BASE64 }}
        p12-password: ${{ secrets.P12_PASSWORD }}
        mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}

    # 6. Собираем архив .xcarchive
    - name: Build iOS App Archive
      run: |
        xcodebuild -workspace ios/RPTChatIOS.xcworkspace \
                   -scheme RPTChatIOS \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   archive -archivePath RPTChat.xcarchive
      # Создаем архив приложения, используя воркспейс и схему из вашего проекта

    # 7. Экспортируем .ipa файл из архива
    - name: Export IPA
      run: |
        xcodebuild -exportArchive \
                   -archivePath RPTChat.xcarchive \
                   -exportPath ./build \
                   -exportOptionsPlist ios/ExportOptions.plist
      # Создаем финальный .ipa файл, готовый к установке

    # 8. Загружаем .ipa как артефакт сборки
    - name: Upload IPA
      uses: actions/upload-artifact@v3
      with:
        name: RPTChat-iOS
        path: ./build/RPTChat.ipa
      # Сохраняем собранный файл, чтобы его можно было скачать со страницы сборки
          RPTChat.xcarchive
        retention-days: 30
